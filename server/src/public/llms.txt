# Simple IoT Server

> Simple IoT Server is a lightweight IoT server implementation for managing and monitoring smart device (one device only) with MQTT support. Made by Realzzy

> Github Repository: https://github.com/fuloid/simple-iot-server

# OpenAPI Spec File
> For API endpoints, docs, requirement etc, please refer to this link:

> openapi.json: https://{{url}}/docs/openapi.json
> Human readable: https://{{url}}/docs

> In summary:
> - `GET /api/login`
> - `GET /api/online`
> - `GET /api/sensors`
> - `POST /api/action`
> - Only 4 endpoints in total

# Server Context:
- This is a Simple IoT Server (SM-S) for managing smart device (one device only)
- Built with Bun + Hono for API and EMQX for MQTT
- Uses PostgreSQL with Drizzle ORM for data persistence
- Features structured logging with Pino

# Key Components:
1. Authentication System
   - Basic auth for application access
   - MQTT credentials for device communication & application realtime data needs

2. Data Structure
   - Sensors: water_temp, water_acidity, water_turbidity, water_level, air_temp, humidity, food_level
   - Actions: food_refill, water_refill, water_drain
   - Device status: online/offline tracking with ping system

3. Communication Patterns
   - REST API: For application interactions. See https://{{url}}/docs/openapi.json
   - MQTT: For device communication & application realtime data needs
   - Structured logging: For system monitoring

5. Security Features
   - Rate limiting
   - Basic auth using username & password for easier use.
   - With access control for both device and application
   - Secure MQTT channels

# Development Notes:
- This is a development/testing server
- Not recommended for production use
- Contains example implementations
- Includes Arduino ESP32 client library
- Railway deployment ready

# Reference Links:
- Bun: https://bun.sh
- Hono: https://hono.dev
- EMQX: https://www.emqx.io
- Drizzle: https://orm.drizzle.team
- Railway: https://railway.app